{"ast":null,"code":"var _jsxFileName = \"G:\\\\MERN (Final Version)\\\\MERN (Final Version)\\\\react-client\\\\src\\\\components\\\\student\\\\Course.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faCheckSquare, faMedal } from '@fortawesome/free-solid-svg-icons';\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      URL: \"\",\n      completed: false\n    };\n    this.markComplete = this.markComplete.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/student/courses/watch/\".concat(this.props.match.params.id), {\n      headers: {\n        Authorization: \"Bearer \".concat(this.props.auth.getAccessToken())\n      }\n    }).then(response => {\n      const url = response.data;\n      this.setState({\n        URL: url\n      });\n    }).catch(error => {\n      console.log(\"Following error was encountered: \".concat(error));\n    });\n  }\n\n  markComplete() {\n    const courseID = this.props.match.params.id;\n    this.props.auth.getProfile((profile, err) => {\n      if (courseID && profile) {\n        const progress = {\n          studentID: profile.sub,\n          courseID: courseID\n        };\n        axios.post(\"http://localhost:4000/student/markprogress\", progress, {\n          headers: {\n            Authorization: \"Bearer \".concat(this.props.auth.getAccessToken())\n          }\n        }).then(this.setState({\n          completed: true\n        }));\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"video-player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      src: this.state.URL,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(\"footer\", {\n      id: \"module-page-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/courses\",\n      href: \"/courses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"back-icon\",\n      icon: faAngleLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" Courses\"), React.createElement(\"button\", {\n      style: {\n        display: this.state.completed === false && !this.props.auth.isAdmin() ? 'initial' : 'none'\n      },\n      onClick: this.markComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mark-complete-icon\",\n      icon: faCheckSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \"  Mark As Complete\"), React.createElement(\"p\", {\n      className: \"completed\",\n      style: {\n        display: this.state.completed === true ? 'initial' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"show-completed-icon\",\n      icon: faMedal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" Completed\")));\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["G:\\MERN (Final Version)\\MERN (Final Version)\\react-client\\src\\components\\student\\Course.js"],"names":["React","Component","Link","axios","FontAwesomeIcon","faAngleLeft","faCheckSquare","faMedal","Course","constructor","props","state","URL","completed","markComplete","bind","componentDidMount","get","match","params","id","headers","Authorization","auth","getAccessToken","then","response","url","data","setState","catch","error","console","log","courseID","getProfile","profile","err","progress","studentID","sub","post","render","display","isAdmin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faCheckSquare, faMedal } from '@fortawesome/free-solid-svg-icons'\n\nclass Course extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            URL: \"\",\n            completed: false\n        }\n        this.markComplete = this.markComplete.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:4000/student/courses/watch/${this.props.match.params.id}`, { headers: { Authorization: `Bearer ${this.props.auth.getAccessToken()}` } }).then((response) => {\n            const url = response.data;\n            this.setState({ \n                URL: url\n            });\n        }).catch((error) => {   \n            console.log(`Following error was encountered: ${error}`);\n        });\n    }\n    \n    markComplete() {\n        const courseID = this.props.match.params.id;\n        this.props.auth.getProfile((profile, err) => {\n           if (courseID && profile) {\n               const progress = {\n                   studentID: profile.sub,\n                   courseID: courseID\n               }\n               axios.post(\"http://localhost:4000/student/markprogress\", progress, { headers: { Authorization: `Bearer ${this.props.auth.getAccessToken()}` } }).then(this.setState({\n                   completed: true\n               }));\n           }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <main>\n                    <section id=\"video-player-container\">\n                        <iframe src={this.state.URL} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </section>\n                </main>\n                <footer id=\"module-page-footer\">\n                    <Link to=\"/courses\" href=\"/courses\"><FontAwesomeIcon className=\"back-icon\" icon={faAngleLeft} /> Courses</Link>\n                    <button style={{ display: this.state.completed === false && !this.props.auth.isAdmin() ? 'initial' : 'none' }} onClick={this.markComplete}><FontAwesomeIcon className=\"mark-complete-icon\" icon={faCheckSquare} />  Mark As Complete</button>\n                    <p className=\"completed\" style={{ display: this.state.completed === true ? 'initial' : 'none' }}><FontAwesomeIcon className=\"show-completed-icon\" icon={faMedal} /> Completed</p>\n                </footer>\n            </>\n        );\n    }\n\n}\n\nexport default Course;"]},"metadata":{},"sourceType":"module"}